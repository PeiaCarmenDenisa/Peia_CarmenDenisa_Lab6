<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Peia_CarmenDenisa_Lab6"
        xmlns:AutoLotModel="clr-namespace:AutoLotModel;assembly=AutoLotModel" x:Class="Peia_CarmenDenisa_Lab6.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Customer}, CreateList=True}"/>
        <CollectionViewSource x:Key="inventoryViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Inventory}, CreateList=True}"/>
        <CollectionViewSource x:Key="customerOrdersViewSource" Source="{Binding Orders, Source={StaticResource inventoryViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
 Value="{Binding RelativeSource={x:Static RelativeSource.Self},
 Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <TabControl x:Name="tbCtrlAutoLot" HorizontalAlignment="Left" Height="399" Margin="10,10,0,0" VerticalAlignment="Top" Width="772">
            <TabItem Header="Orders">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerOrdersViewSource}">
                   
                    <ComboBox x:Name="cmbCustomers" HorizontalAlignment="Left" Margin="182,98,0,0" VerticalAlignment="Top" Width="120">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="FirstName"/>
                                            <Binding Path="LastName"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox x:Name="cmbInventory" HorizontalAlignment="Left" Margin="389,98,0,0" VerticalAlignment="Top" Width="120" >
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="Make"/>
                                            <Binding Path="Color"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label Content="Customers" HorizontalAlignment="Left" Margin="182,67,0,0" VerticalAlignment="Top" Grid.Column="3"/>
                    <Label Content="Inventory" HorizontalAlignment="Left" Margin="389,67,0,0" VerticalAlignment="Top" Grid.Column="3"/>

                    <DataGrid x:Name="ordersDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" RowDetailsVisibilityMode="VisibleWhenSelected" IsSynchronizedWithCurrentItem="True" Margin="182,140,223,123" >
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="FirstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="LastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="MakeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="ColorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="btnNew2" Content="New2" HorizontalAlignment="Left" Margin="3,67,0,0" VerticalAlignment="Top" Width="75" Click="btnNew2_Click" Grid.Column="3"/>
                    <Button x:Name="btnEdit2" Content="Edit2" HorizontalAlignment="Left" Margin="3,105,0,0" VerticalAlignment="Top" Width="75" Click="btnEdit2_Click" Grid.Column="3"/>
                    <Button x:Name="btnDelete2" Content="Delete2" HorizontalAlignment="Left" Margin="3,143,0,0" VerticalAlignment="Top" Width="75" Click="btnDelete2_Click" Grid.Column="3"/>
                    <Button x:Name="btnSave2" Content="Save2" HorizontalAlignment="Left" Margin="3,213,0,0" VerticalAlignment="Top" Width="75" Click="btnSave2_Click" />
                    <Button x:Name="btnCancel2" Content="Cancel2" HorizontalAlignment="Left" Margin="3,264,0,0" VerticalAlignment="Top" Width="75" Click="btnCancel2_Click" Grid.Column="3"/>
                    <Button x:Name="btnPrev2" Content="Previous2" HorizontalAlignment="Left" Margin="182,284,0,0" VerticalAlignment="Top" Width="75" Click="btnPrev2_Click" Grid.Column="3"/>
                    <Button x:Name="btnNext2" Content="Next2" HorizontalAlignment="Left" Margin="468,284,0,0" VerticalAlignment="Top" Width="75" Click="btnNext2_Click" Grid.Column="3"/>

                </Grid>
            </TabItem>
            <TabItem Header="Customers" >
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerViewSource}">

                    <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="234,66,227,203" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="custIdColumn" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <Button x:Name="btnNew" Content="New" Click="btnNew_Click" HorizontalAlignment="Left" Margin="56,51,0,0" VerticalAlignment="Top" Width="75" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <Button x:Name="btnEdit" Content="Edit" Click="btnEdit_Click" HorizontalAlignment="Left" Margin="56,102,0,0" VerticalAlignment="Top" Width="75" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <Button x:Name="btnDelete" Content="Delete" Click="btnDelete_Click" HorizontalAlignment="Left" Margin="56,153,0,0" VerticalAlignment="Top" Width="75" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" Margin="56,237,0,0" VerticalAlignment="Top" Width="75" Click="btnSave_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="false" />
                                <Style.Triggers>
                                    <!--" Butonul Save va fi inactiv daca exista erori de validare"-->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false" />

                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="true" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button x:Name="btnCancel" Content="Cancel" HorizontalAlignment="Left" Margin="56,282,0,0" VerticalAlignment="Top" Width="75" Grid.Column="1" Grid.ColumnSpan="2" Click="btnCancel_Click"/>
                    <Button x:Name="btnPrev" Content="Previous" HorizontalAlignment="Left" Margin="234,178,0,0" VerticalAlignment="Top" Width="75" Click="btnPrev_Click"/>
                    <Button x:Name="btnNext" Content="Next" HorizontalAlignment="Left" Margin="464,178,0,0" VerticalAlignment="Top" Width="75" Click="btnNext_Click"/>
                    <Grid x:Name="grid2" HorizontalAlignment="Left" Margin="286,239,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Cust Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center" IsEnabled="False"/>
                        <TextBox x:Name="custIdTextBox" IsEnabled="False" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CustId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}"
Style="{StaticResource textBoxInError}"/>
                        <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="lastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}"
Style="{StaticResource textBoxInError}"/>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Inventory">
                <Grid Background="#FFE5E5E5" Margin="0,-1,0,0" RenderTransformOrigin="0.496,0.48" DataContext="{StaticResource inventoryViewSource}">
                    <Grid x:Name="grid3" DataContext="{StaticResource inventoryViewSource}" HorizontalAlignment="Left" Margin="357,229,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="110"/>
                            <ColumnDefinition Width="16"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Car Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,4,0,4" Grid.Row="0" VerticalAlignment="Center" Grid.ColumnSpan="2" Height="24" Width="51" IsEnabled="False"/>
                        <TextBox x:Name="carIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="0" Text="{Binding CarId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="2"/>
                        <Label Content="Color:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="colorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="1" Text="{Binding Color, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="2"/>
                        <Label Content="Make:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="makeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="2" Text="{Binding Make, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="2"/>
                    </Grid>
                    <Button x:Name="btnNew1" Content="New1" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="54,64,0,0" Click="btnNew1_Click" IsCancel="True" Grid.ColumnSpan="2"/>
                    <Button x:Name="btnEdit1" Content="Edit1" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="54,121,0,0" Click="btnEdit1_Click" Grid.ColumnSpan="2"/>
                    <Button x:Name="btnDelete1" Content="Delete1" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="54,170,0,0" Click="btnDelete1_Click" Grid.ColumnSpan="2"/>
                    <Button x:Name="btnSave1" Content="Save1" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Grid.ColumnSpan="2" Margin="54,256,0,0" Click="btnSave1_Click"/>
                    <Button x:Name="btnCancel1" Content="Cancel1" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="54,305,0,0" Grid.ColumnSpan="2" Click="btnCancel1_Click"/>
                    <Button x:Name="btnPrev1" Content="Previous1" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="320,170,0,0" Click="btnPrev1_Click"/>
                    <Button x:Name="btnNext1" Content="Next1" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="515,175,0,0" Click="btnNext1_Click"/>
                    <DataGrid x:Name="inventoryDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="288,61,144,212" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="carIdColumn" Binding="{Binding CarId}" Header="Car Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="colorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="makeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
        </TabControl>


    </Grid>
</Window>
